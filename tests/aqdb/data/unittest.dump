#
# Define base data that gets loaded into the database at the beginning of
# the unittest.
#
# Note: the parser is DUMB. Don't try to do anything smart in this file.
#
# Basic syntax
# ------------
#
# The file contains a list of statements. Threr are two kinds of statements:
# object creation and macro definition. (Incomplete) BNF:
#
#	<statement> ::= <object definition> | <macro definition>
#	<macro definition> ::= <macro name> <object definition>
#	<macro name> ::= '@' <symbol>
#	<object definition> ::= <class name> '(' <param name> '=' <param value>[',' ...] ')'
#	<param value> ::= <literal> | <macro name> | <object definiton>
#	<literal> ::= <integer> | <float> | <string> | 'True' | 'False' | 'None'
#
# <class name> is a class defined in aquilon.aqdb.model.
#
# <object definition> can appear in two contexts: either as a statement, in
# which case it creates a new object, or as a reference in macro defintions or
# parameter values, in which case it means object lookup.
#
# When creating an object, the parameters are passed directly to the __init__()
# method of the given class. When looking up an object, the parameters are
# passed to the get_unique(..., compel=True) method of the given class.
#
# Literals can be integers, True/False, and strings. Strings should be between
# quotes (single or double), although the parser does not enforce that
# currently. Backslash-style escaping works between double quotes.
#
# White space is generally ignored.
#
# Macros
# ------
#
# Macros can be used as a shorthand when the same object is referenced many
# times by subsequently created objects. Macro names start with the '@'
# character. The rest of the name should be a valid Python identifier, although
# this is not enforced yet.

Realm(name="example.realm", trusted=False)

Role(name="nobody")
Role(name="aqd_admin")

UserPrincipal(name="cdb", role=Role(name="aqd_admin"), realm=Realm(name="example.realm"))
UserPrincipal(name="otheruser", role=Role(name="nobody"), realm=Realm(name="example.realm"))
UserPrincipal(name="orphantestuser", role=Role(name="nobody"), realm=Realm(name="example.realm"))

DnsEnvironment(name="internal")
DnsEnvironment(name="external")

NetworkEnvironment(name="internal", dns_environment=DnsEnvironment(name="internal"))

DnsDomain(name="ms.com")
DnsDomain(name="msad.ms.com", restricted=True)
DnsDomain(name="one-nyp.ms.com")
DnsDomain(name="new-york.ms.com")

User(name="otheruser", uid=1001, gid=1001, full_name="Other user", home_dir="/tmp")
User(name="orphantestuser", uid=1002, gid=1002, full_name="Other user to delete", home_dir="/tmp")

Domain(name="prod", compiler="/none/panc.jar",
       comments="Production source domain.")
Sandbox(name="othersandbox", owner=UserPrincipal(name="otheruser"),
	compiler="/none/panc.jar",
        comments="Test if owner is deleted",
	base_commit='0000000000')
Sandbox(name="orphantestsandbox", owner=UserPrincipal(name="orphantestuser"),
	compiler="/none/panc.jar",
        comments="Test if owner is deleted",
	base_commit='0000000000')

Vendor(name="intel")
Vendor(name="generic")
Vendor(name="dell")
Vendor(name="hp")
Vendor(name="ibm")
Vendor(name="virtual")
Vendor(name="vmware")
Vendor(name="bnt")
Vendor(name="cisco")
Vendor(name="aurora_vendor")
Vendor(name="f5")

@intel Vendor(name="intel")
@hp Vendor(name="hp")
@ibm Vendor(name="ibm")
@dell Vendor(name="dell")

Model(vendor=@intel, name="e5-2640", model_type="cpu")
Model(vendor=@intel, name="e5-2660", model_type="cpu")
Model(vendor=@intel, name="e5-2697-v3", model_type="cpu")
Model(vendor=@intel, name="l5520", model_type="cpu")
Model(vendor=@intel, name="e5-2660-v3", model_type="cpu")
Model(vendor=Vendor(name="aurora_vendor"), name="aurora_cpu", model_type="cpu")
Model(vendor=Vendor(name="virtual"), name="virtual_cpu", model_type="cpu")
Model(vendor=Vendor(name="f5"), name="f5_cpu", model_type="cpu")

Model(vendor=Vendor(name="generic"), name="generic_nic", model_type="nic")
@generic_nic Model(vendor=Vendor(name="generic"), name="generic_nic", model_type="nic")

Model(vendor=@ibm, name="hs21-8853", model_type="blade")
Model(vendor=@hp, name="bl460cg8", model_type="blade")
Model(vendor=@hp, name="c-class", model_type="chassis")
Model(vendor=@hp, name="dl360g9", model_type="rackmount")
Model(vendor=@dell, name="r730", model_type="rackmount")
Model(vendor=Vendor(name="bnt"), name="rs g8000", model_type="switch")
Model(vendor=Vendor(name="cisco"), name="ws-c2960-48tt-l", model_type="switch")
Model(vendor=Vendor(name="generic"), name="temp_switch", model_type="switch")
Model(vendor=Vendor(name="aurora_vendor"), name="aurora_chassis_model", model_type="aurora_chassis")
Model(vendor=Vendor(name="aurora_vendor"), name="aurora_model", model_type="aurora_node")
Model(vendor=Vendor(name="virtual"), name="vm", model_type="virtual_machine")
Model(vendor=Vendor(name="f5"), name="f5_model", model_type="rackmount")

MachineSpecs(model=Model(name="hs21-8853"),
             cpu_model=Model(name="e5-2660"), cpu_quantity=2, memory=8192,
             controller_type="scsi", disk_type="local", disk_capacity=68,
	     nic_model=@generic_nic)
MachineSpecs(model=Model(name="r730"),
             cpu_model=Model(name="e5-2697-v3"), cpu_quantity=2, memory=262144,
             controller_type="sas", disk_type="local", disk_capacity=600,
	     nic_model=@generic_nic)
MachineSpecs(model=Model(name="bl460cg8"),
             cpu_model=Model(name="e5-2640"), cpu_quantity=2, memory=65536,
             controller_type="sata", disk_type="local", disk_capacity=500,
	     nic_model=@generic_nic)
MachineSpecs(model=Model(name="dl360g9"),
             cpu_model=Model(name="e5-2660-v3"), cpu_quantity=2, memory=24576,
             controller_type="sas", disk_type="local", disk_capacity=600,
	     nic_model=@generic_nic)
MachineSpecs(model=Model(name="aurora_model"),
             cpu_model=Model(name="aurora_cpu"), cpu_quantity=0, memory=0,
             controller_type="scsi", disk_type="local", disk_capacity=0,
	     nic_model=@generic_nic)
MachineSpecs(model=Model(name="f5_model"),
             cpu_model=Model(name="f5_cpu"), cpu_quantity=0, memory=0,
             controller_type="scsi", disk_type="local", disk_capacity=0,
	     nic_model=@generic_nic)
